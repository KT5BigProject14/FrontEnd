{"ast":null,"code":"var _jsxFileName = \"/Users/samuel/Desktop/FE/FrontEnd/pro/src/LoginPage.js\",\n  _s = $RefreshSig$();\n// Login.js\nimport React, { useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport \"./LoginPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = ({\n  setIsLoggedIn\n}) => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loginCheck, setLoginCheck] = useState(false);\n  const navigate = useNavigate();\n  const handleLogin = async event => {\n    event.preventDefault();\n    await new Promise(r => setTimeout(r, 1000));\n    const response = await fetch(\"로그인 서버 주소\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    const result = await response.json();\n    if (response.status === 200) {\n      setLoginCheck(false);\n      sessionStorage.setItem(\"token\", result.token);\n      sessionStorage.setItem(\"email\", result.email);\n      sessionStorage.setItem(\"role\", result.role);\n      sessionStorage.setItem(\"storeid\", result.storeId);\n      console.log(\"로그인성공, 이메일주소:\" + result.email);\n      setIsLoggedIn(true);\n      navigate(\"/\");\n    } else {\n      setLoginCheck(true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"login-form\",\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Let's start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"username\",\n        children: \"\\uC774\\uBA54\\uC77C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"username\",\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"\\uBE44\\uBC00\\uBC88\\uD638\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), loginCheck && /*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          color: \"red\"\n        },\n        children: \"\\uC774\\uBA54\\uC77C \\uD639\\uC740 \\uBE44\\uBC00\\uBC88\\uD638\\uAC00 \\uD2C0\\uB838\\uC2B5\\uB2C8\\uB2E4.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"\\uB85C\\uADF8\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"signup-link\",\n        children: [\"\\uC544\\uC9C1 \\uD68C\\uC6D0\\uC774 \\uC544\\uB2C8\\uC2E0\\uAC00\\uC694? \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/signup\",\n          children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"GC6S7NAAk+Iy+JqAKCUo6pKEdDM=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","Link","useNavigate","jsxDEV","_jsxDEV","Login","setIsLoggedIn","_s","email","setEmail","password","setPassword","loginCheck","setLoginCheck","navigate","handleLogin","event","preventDefault","Promise","r","setTimeout","response","fetch","method","headers","body","JSON","stringify","result","json","status","sessionStorage","setItem","token","role","storeId","console","log","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","value","onChange","e","target","style","color","to","_c","$RefreshReg$"],"sources":["/Users/samuel/Desktop/FE/FrontEnd/pro/src/LoginPage.js"],"sourcesContent":["// Login.js\r\nimport React, { useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport \"./LoginPage.css\";\r\n\r\nconst Login = ({ setIsLoggedIn }) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [loginCheck, setLoginCheck] = useState(false);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogin = async (event) => {\r\n    event.preventDefault();\r\n    await new Promise((r) => setTimeout(r, 1000));\r\n\r\n    const response = await fetch(\"로그인 서버 주소\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ email, password }),\r\n    });\r\n    const result = await response.json();\r\n\r\n    if (response.status === 200) {\r\n      setLoginCheck(false);\r\n      sessionStorage.setItem(\"token\", result.token);\r\n      sessionStorage.setItem(\"email\", result.email);\r\n      sessionStorage.setItem(\"role\", result.role);\r\n      sessionStorage.setItem(\"storeid\", result.storeId);\r\n      console.log(\"로그인성공, 이메일주소:\" + result.email);\r\n      setIsLoggedIn(true);\r\n      navigate(\"/\");\r\n    } else {\r\n      setLoginCheck(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <form className=\"login-form\" onSubmit={handleLogin}>\r\n        <h1>Let's start</h1>\r\n        <label htmlFor=\"username\">이메일</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"username\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n        <label htmlFor=\"password\">비밀번호</label>\r\n        <input\r\n          type=\"password\"\r\n          id=\"password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n        {loginCheck && (\r\n          <label style={{ color: \"red\" }}>이메일 혹은 비밀번호가 틀렸습니다.</label>\r\n        )}\r\n        <button type=\"submit\">로그인</button>\r\n        <p className=\"signup-link\">\r\n          아직 회원이 아니신가요? <Link to=\"/signup\">회원가입</Link>\r\n        </p>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}